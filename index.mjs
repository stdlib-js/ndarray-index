// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.2-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.2-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.2.2-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-property@v0.2.2-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.2-esm/index.mjs";import{isPrimitive as a}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.2-esm/index.mjs";import{isPrimitive as o}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-integer@v0.2.2-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-ndarraylike2ndarray@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-dtype@v0.2.2-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-to-json@esm/index.mjs";import{factory as m}from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-assert-contains@v0.2.2-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-linked-list@esm/index.mjs";var v=["linear","cartesian"],y=m(v);var c=new f;function j(e){for(var n=c.first();n;){if(n.value.id===e)return n;n=n.next}return null}var b=-1;function g(t){var h,m,f,j,w,x;if(!(this instanceof g))return arguments.length>1?new g(t,arguments[1]):new g(t);if(!d(t))throw new TypeError(i("null5t",t));if(h={persist:!1,kind:""},arguments.length>1&&(m=function(e,i){return n(i)?r(i,"persist")&&(e.persist=i.persist,!a(e.persist))?new TypeError(u("null2o","persist",e.persist)):r(i,"kind")&&(e.kind=i.kind,!y(e.kind)&&""!==e.kind)?new TypeError(u("null4S","kind",v.join('", "'),e.kind)):null:new TypeError(u("null2V",i))}(h,arguments[1]),m))throw m;if(f=l(t),"generic"===(j=p(f)))if(f.length>0)if(x=f.iget(0),a(x))w="bool";else{if(!o(x))throw new TypeError("invalid argument. First argument must be a valid index ndarray.");w="int"}else w="int";else if("int64"===j||"int32"===j)w="int";else if("uint8"===j)w="mask";else{if("bool"!==j)throw new TypeError("invalid argument. First argument must be a valid index ndarray.");w="bool"}if("int"!==w&&""!==h.kind)throw new TypeError(i('invalid argument. First argument is not compatible with the specified index "kind". Type: %s. Kind: %s.',w,h.kind));return c.push({id:(b+=1).toString(),ref:this,data:f,type:w,kind:h.kind,dtype:j,persist:h.persist}),e(this,"_node",c.last()),s(this,"_invalidated",!1),this}function w(t){var s=function(e){var s,d;if(d={kind:t},arguments.length<2)return new g(e,d);if(s=arguments[1],!n(s))throw new TypeError(i("null2V",s));r(s,"persist")&&(d.persist=s.persist);return new g(e,d)};return e(s,"free",g.free),e(s,"get",g.get),s}e(g,"name","ndindex"),e(g,"free",(function(n){var r,i;return null!==(r=j(n))&&(i=r.value,e(i.ref,"_invalidated",!0),c.remove(r),i.data=null,!0)})),e(g,"get",(function(e){var n,r,i;return null===(n=j(e))?null:(r={data:(i=n.value).data,type:i.type,kind:i.kind,dtype:i.dtype},i.persist||g.free(e),r)})),t(g.prototype,"data",(function(){if(this._invalidated)throw new Error("invalid operation. This ndarray index instance has already been freed and can no longer be used.");return this._node.value.data})),t(g.prototype,"dtype",(function(){if(this._invalidated)throw new Error("invalid operation. This ndarray index instance has already been freed and can no longer be used.");return this._node.value.dtype})),t(g.prototype,"id",(function(){if(this._invalidated)throw new Error("invalid operation. This ndarray index instance has already been freed and can no longer be used.");return this._node.value.id})),t(g.prototype,"isCached",(function(){return!this._invalidated})),t(g.prototype,"kind",(function(){if(this._invalidated)throw new Error("invalid operation. This ndarray index instance has already been freed and can no longer be used.");return this._node.value.kind})),t(g.prototype,"type",(function(){if(this._invalidated)throw new Error("invalid operation. This ndarray index instance has already been freed and can no longer be used.");return this._node.value.type})),e(g.prototype,"toString",(function(){if(this._invalidated)throw new Error("invalid operation. This ndarray index instance has already been freed and can no longer be used.");return"ndindex<"+this._node.value.id+">"})),e(g.prototype,"toJSON",(function(){if(this._invalidated)throw new Error("invalid operation. This ndarray index instance has already been freed and can no longer be used.");return{type:"ndindex",kind:this._node.value.kind,data:h(this._node.value.data)}}));var x=w("cartesian"),k=w("linear");e(g,"cartesianIndex",x),e(g,"linearIndex",k);export{x as cartesianIndex,g as default,k as linearIndex};
//# sourceMappingURL=index.mjs.map
